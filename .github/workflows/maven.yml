# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI for Maven Project with Healenium and Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Use a Linux-based runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK (Make sure you're using a version compatible with your project)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'  # or the version you're using in your project
          distribution: 'adoptopenjdk'

      # Step 3: Set up Docker (if you're building Docker images)
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 4: Build Docker image (if your tests run inside Docker containers)
      - name: Build Docker image
        run: |
          docker build -t healenium-docker .

      # Step 5: Run Maven tests (using Docker image)
      - name: Run tests inside Docker container
        run: |
          docker run --rm healenium-docker mvn clean test

      # Step 6: Upload Test Results (Optional)
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/test-*.xml  # Assuming your Maven tests output results in the 'target' folder

      # Step 7: Notify on success/failure (Optional)
      - name: Notify on success/failure
        if: success()
        run: echo "Tests passed!"
        # You can also add failure notifications (Slack, email, etc.) if needed
