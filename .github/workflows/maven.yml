# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: CI for Java Healenium with Docker

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest  # Run the build on the latest Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (e.g., OpenJDK 11)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adoptopenjdk'

      # Step 3: Set up Docker (required to build and run Docker containers)
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Step 4: Log in to Docker Hub (only if you need to pull/push images)
      - name: Log in to Docker Hub
        if: secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build Docker image using your Dockerfile (if you need a custom container)
      - name: Build Docker image
        run: |
          docker build -t healenium-docker .

      # Step 6: Run tests inside the Docker container
      - name: Run Healenium tests in Docker container
        run: |
          docker run --rm healenium-docker mvn clean test

      # Step 7: Upload test results as artifacts (optional, if you want to view the results)
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/test-*.xml
